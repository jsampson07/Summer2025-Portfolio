"""Initial fresh migration

Revision ID: 4a8e7e486e1d
Revises: 
Create Date: 2025-07-08 14:01:06.778815

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4a8e7e486e1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('goal', sa.Enum('BULK', 'CUT', 'MAINTAIN', 'CASUAL', name='goalenum'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('password_hash')
    )
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_Users_username'), ['username'], unique=True)

    op.create_table('Foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('calories', sa.Integer(), nullable=False),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.Column('carbs', sa.Integer(), nullable=True),
    sa.Column('fat', sa.Integer(), nullable=True),
    sa.Column('serving_size', sa.Float(), nullable=False),
    sa.Column('serving_unit', sa.Enum('GRAMS', 'OUNCE', 'ML', 'CUP', 'UNIT', name='servingunit'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Foods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Foods_name'), ['name'], unique=True)

    op.create_table('Meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('saved', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Meals', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Meals_name'), ['name'], unique=True)

    op.create_table('daily_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.DateTime(), nullable=False),
    sa.Column('quantity_consumed', sa.Float(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=True),
    sa.Column('meal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['Foods.id'], ),
    sa.ForeignKeyConstraint(['meal_id'], ['Meals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('daily_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_log_log_date'), ['log_date'], unique=False)

    op.create_table('meal_items',
    sa.Column('meal_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['Foods.id'], ),
    sa.ForeignKeyConstraint(['meal_id'], ['Meals.id'], ),
    sa.PrimaryKeyConstraint('meal_id', 'food_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meal_items')
    with op.batch_alter_table('daily_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_log_log_date'))

    op.drop_table('daily_log')
    with op.batch_alter_table('Meals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Meals_name'))

    op.drop_table('Meals')
    with op.batch_alter_table('Foods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Foods_name'))

    op.drop_table('Foods')
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Users_username'))
        batch_op.drop_index(batch_op.f('ix_Users_email'))

    op.drop_table('Users')
    # ### end Alembic commands ###
